{% liquid
  assign heading = section.settings.heading
  assign heading_size = section.settings.heading_size
  assign heading_weight = section.settings.heading_weight
  assign heading_color = section.settings.heading_color
  assign heading_size_mobile = section.settings.heading_size_mobile

  assign percentage_size = section.settings.percentage_size
  assign percentage_weight = section.settings.percentage_weight
  assign percentage_color = section.settings.percentage_color
  assign percentage_size_mobile = section.settings.percentage_size_mobile

  assign range_color = section.settings.range_color
  assign range_background = section.settings.range_background

  assign item_text_size = section.settings.item_text_size
  assign item_text_weight = section.settings.item_text_weight
  assign item_text_color = section.settings.item_text_color
  assign item_text_size_mobile = section.settings.item_text_size_mobile

  assign subtext = section.settings.subtext
  assign subtext_size = section.settings.subtext_size
  assign subtext_weight = section.settings.subtext_weight
  assign subtext_color = section.settings.subtext_color
  assign subtext_size_mobile = section.settings.subtext_size_mobile

  assign button_label = section.settings.button_label
  assign button_link = section.settings.button_link
  assign button_size = section.settings.button_size
  assign button_weight = section.settings.button_weight
  assign button_color = section.settings.button_color
  assign button_radius = section.settings.button_radius
  assign button_border_width = section.settings.button_border_width
  assign button_border_style = section.settings.button_border_style
  assign button_border_color = section.settings.button_border_color
  assign button_background = section.settings.button_background

  assign image_radius = section.settings.image_radius
  assign image_border_width = section.settings.image_border_width
  assign image_border_style = section.settings.image_border_style
  assign image_border_color = section.settings.image_border_color

  assign layout_margin_top = section.settings.layout_margin_top
  assign layout_margin_bottom = section.settings.layout_margin_bottom
  assign layout_background = section.settings.layout_background
%}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css">
<style data-shopify="">
  .section-{{section.id}} {
    border-top: solid #000000 0px;
    border-bottom: solid #000000 0px;
    margin-top: {{  layout_margin_top }}px;
    margin-bottom: {{ layout_margin_bottom }}px;
    margin-left: 0rem;
    margin-right: 0rem;
    border-radius: 0px;
    overflow: hidden;
  }

  .section-{{section.id}}-settings {
    margin: 0 auto;
    padding-top: 27px;
    padding-bottom: 27px;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  .video-grid-body-{{section.id}} {
    display: grid;
    grid-template-columns: 1fr;
    gap: 24px;
  }

  .video-grid-videos-{{section.id}} {
    display: flex;
    align-items: center;
    gap: 14px;
  }

  .video-grid-slider-wrapper-{{section.id}} {
    display: grid;
    width: 100%;
  }

  .video-grid-slider-{{section.id}} {
    flex: 1 1 0 !important;
    min-width: 0 !important;
    margin-left: -1.5rem !important;
    margin-right: -1.5rem !important;
    padding-left: 1.5rem !important;
    padding-right: 1.5rem !important;
  }

  .video-grid-video-{{section.id}} {
    position: relative !important;
    z-index: 2 !important;
    box-sizing: border-box !important;
    border: {{  image_border_width }}px {{  image_border_style }} {{ image_border_color }} !important;
    border-radius: {{ image_radius }}px !important;
    overflow: hidden;
  }

  .video-grid-video-wrap-{{section.id}} {
    position: relative;
    height: 100%;
    z-index: 2;
    pointer-events: auto;
  }

  .video-grid-video-wrap-{{section.id}}:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
  }

  .video-grid-video-{{section.id}} video,
  .video-grid-video-{{section.id}} iframe {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    margin: 0;
    border: 0;
    box-shadow: 0;
  }

  .video-grid-play-{{section.id}} {
    position: absolute;
    top: 50%;
    left: 50%;
    padding: 15px;
    border-radius: 100px;
    background-color: rgba(249,249,238,0.7);
    transform: translate(-50%, -50%);
    z-index: 2;
    pointer-events: none;
    opacity: 0;
    transition: all 0.25s ease 0s;
  }

  .video-grid-play-{{section.id}} svg {
    display: block;
    width: 36px;
    height: 36px;
    object-fit: cover;
    transform: translateX(12%);
  }

  .video-grid-play-{{section.id}} svg path {
    fill: #333;
  }

  .video-grid-play-{{section.id}}.active {
    opacity: 1;
    transition: all 0.25s ease 0s;
  }

  .video-grid-btn-prev-{{section.id}},
  .video-grid-btn-next-{{section.id}} {
    display: flex;
    flex-shrink: 0;
    width: 28px;
    height: 28px;
    border: 0px;
    border: 0px solid #c7c7c7;
    border-radius: 100px;
    background: transparent;
    background: ;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease 0s;
    cursor: pointer;
    -webkit-appearance: none;
    /* box-shadow: 0px 0px 10px 0px rgba(0,0,0,.15); */
  }

  .video-grid-btn-prev-{{section.id}} .animate-icon,
  .video-grid-btn-next-{{section.id}} .animate-icon {
    pointer-events: none;
    place-items: center;
    display: grid;
  }

  .video-grid-btn-prev-{{section.id}} .animate-icon:before,
  .video-grid-btn-next-{{section.id}} .animate-icon:before {
    content: "";
    grid-area: 1 / -1;
    transition: all .2s ease;
    width: 10px;
    height: 10px;
    transform: rotate(calc(1 * 45deg));
    box-sizing: border-box;
    border-style: solid;
    border: 0px;
    border-right: 2px solid currentColor;
    border-top: 2px solid currentColor;
    position: relative;
    left: -1px;
  }

  .video-grid-btn-prev-{{section.id}} .animate-icon:before {
    left: unset;
    right: -1px;
    border-right: 0px;
    border-top: 0px;
    border-bottom: 2px solid currentColor;
    border-left: 2px solid currentColor;
  }

  .video-grid-btn-prev-{{section.id}} .animate-icon:after,
  .video-grid-btn-next-{{section.id}} .animate-icon:after {
    content: "";
    grid-area: 1 / -1;
    transition: all .2s ease;
    width: 9.7px;
    height: 1.6px;
    transform-origin: center;
    opacity: 0;
    background: currentColor;
    transform: scaleX(.5);
  }

  .video-grid-btn-prev-{{section.id}} span,
  .video-grid-btn-next-{{section.id}} span {
    color: #1c413b;
  }

  .video-grid-btn-prev-{{section.id}}.swiper-button-disabled,
  .video-grid-btn-next-{{section.id}}.swiper-button-disabled {
    opacity: 0.5;
  }

  .video-grid-btn-prev-{{section.id}}.swiper-button-lock,
  .video-grid-btn-next-{{section.id}}.swiper-button-lock {
    opacity: 0;
    pointer-events: none;
  }

  .video-grid-content-{{section.id}} {
    display: flex;
    flex-direction: column;
    align-items: start;
  }

  .video-grid-heading-{{section.id}} {
    text-align: left;
  }

  .video-grid-heading-{{section.id}} * {
    margin: 0 0 16px 0;
    font-size: {{ heading_size_mobile }}px;
    color: {{ heading_color }};
    line-height: 130%;
    text-transform: unset;
    text-decoration: none;
    font-weight: {{ heading_weight }};
  }

  .video-grid-feature-{{section.id}} {
    display: flex;
    align-items: center;
    gap: 20px;
    padding: 12px 0px;
    border-bottom: 1px solid {{  range_color }};
  }

  .video-grid-circle-{{section.id}} {
    position: relative;
    height: 70px;
  }

  .video-grid-circle-container-{{section.id}} svg {
    width: 70px;
    height: 70px;
  }

  .video-grid-circle-container-{{section.id}} span {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: {{ percentage_size_mobile }}px;
    color: {{ percentage_color }};
    font-weight: {{ percentage_weight }};
    line-height: 130%;
    display: block;
    word-wrap: break-word;
    text-transform: unset;
  }

  .video-grid-feature-text-{{section.id}} {
    text-align: left;
  }

  .video-grid-feature-text-{{section.id}} * {
    margin: 0;
    font-size: {{ item_text_size_mobile }}px;
    color: {{ item_text_color }};
    font-weight: {{ item_text_weight }};
    line-height: 150%;
    text-transform: unset;
    text-decoration: none;
  }

  .video-grid-text-{{section.id}} {
    margin-top: 12px;
    text-align: left;
  }

  .video-grid-text-{{section.id}} * {
    margin: 0;
    font-size: {{ subtext_size_mobile}}px;
    color: {{ subtext_color }};
    font-weight: {{ subtext_weight }};
    line-height: 150%;
    text-transform: unset;
    text-decoration: none;
  }

  .video-grid-button-{{section.id}} {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    width: 100%;
    max-width: fit-content;
    margin-top: 20px;
    font-size: {{ button_size_mobile }}px;
    color: {{ button_color }};
    line-height: 100%;
    text-align: center;
    text-transform: unset;
    text-decoration: none;
    padding: 16px 28px;
    border-radius: {{ button_radius }}px;
    transition: all 0.25s ease 0s;
    background-color: {{ button_background }};
    border: {{ button_border_width }}px {{ button_border_style }} {{ button_border_color }};
    cursor: pointer;
    font-weight: {{ button_weight }};
  }

  .video-grid-button-inner-{{section.id}} {
    margin: 0px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
  }

  .video-grid-button-{{section.id}}:hover {
    color: {{  button_background }};
    transition: all 0.25s ease 0s;
  }

  .video-grid-button-{{section.id}} svg {
    width: 14px;
    height: 14px;
  }

  .video-grid-button-{{section.id}} svg path {
    fill: #ffffff;
    transition: all 0.25s ease 0s;
  }

  .video-grid-button-{{section.id}}:hover svg path {
    fill: #1c413b;
    transition: all 0.25s ease 0s;
  }

  @media(min-width: 1024px) {

    .section-{{section.id}} {
      margin-top: {{ layout_margin_top }}px;
      margin-bottom: {{ layout_margin_bottom }}px;
      margin-left: 0rem;
      margin-right: 0rem;
      border-radius: 0px;
    }

    .section-{{section.id}}-settings {
      padding: 0 5rem;
      padding-top: 36px;
      padding-bottom: 36px;
      padding-left: 5rem;
      padding-right: 5rem;
    }

    .video-grid-body-{{section.id}} {
      grid-template-columns: 1fr 0.7fr;
      gap: 36px;
    }

    .video-grid-slider-{{section.id}} {
      margin-left: 0rem !important;
      margin-right: 0rem !important;
      padding-left: 0rem !important;
      padding-right: 0rem !important;
    }

    .video-grid-play-{{section.id}} svg {
      width: 36px;
      height: 36px;
    }

    .video-grid-btn-prev-{{section.id}},
    .video-grid-btn-next-{{section.id}} {
      width: 32px;
      height: 32px;
    }

    .video-grid-btn-prev-{{section.id}} .animate-icon:before,
    .video-grid-btn-next-{{section.id}} .animate-icon:before {
      width: 12px;
      height: 12px;
    }

    .video-grid-btn-prev-{{section.id}} .animate-icon:after,
    .video-grid-btn-next-{{section.id}} .animate-icon:after {
      width: 11.7px;
    }

    .video-grid-content-{{section.id}} {
      align-items: start;
    }

    .video-grid-heading-{{section.id}} {
      text-align: left;
    }

    .video-grid-heading-{{section.id}} * {
      font-size: {{ heading_size }}px;
    }

    .video-grid-feature-{{section.id}} {
      gap: 30px;
      padding: 12px 0px;
    }

    .video-grid-circle-{{section.id}} {
      height: 88px;
    }

    .video-grid-circle-container-{{section.id}} svg {
      width: 88px;
      height: 88px;
    }

    .video-grid-circle-container-{{section.id}} span {
      font-size: {{ percentage_size }}px;
    }

    .video-grid-feature-text-{{section.id}} {
      text-align: left;
    }

    .video-grid-feature-text-{{section.id}} * {
      font-size: {{ item_text_size }}px;
    }

    .video-grid-text-{{section.id}} {
      margin-top: 12px;
      text-align: left;
    }

    .video-grid-text-{{section.id}} * {
      font-size: {{ subtext_size }}px;
    }

    .video-grid-button-{{section.id}} {
      margin-top: 24px;
      padding: 16px 28px;
      font-size: {{ button_size }}px;
    }
  }
</style>

<style>
  .video-grid-content-{{section.id}} {
    order: 1;
  }

  .video-grid-videos-{{section.id}} {
    order: 2;
  }
</style>

<style>
  @media(min-width: 1024px) {
    .video-grid-content-{{section.id}} {
      order: 2;
    }

    .video-grid-videos-{{section.id}} {
      order: 1;
    }

    .video-grid-body-{{section.id}} {
      grid-template-columns: 1fr 0.7fr;
    }
  }
</style>

<style>
  .video-grid-video-{{section.id}} {
    aspect-ratio: 8.6/13;
  }
</style>

<style>
  @media (min-width: 1024px) {
    .video-grid-video-{{section.id}} {
      aspect-ratio: 8.6/13;
    }
  }
</style>

<style>
  .video-grid-btn-prev-{{section.id}}:hover,
  .video-grid-btn-next-{{section.id}}:hover {
    transform: scale(0.9);
  }

  @media(min-width: 1024px) {
    .video-grid-btn-prev-{{section.id}}:hover,
    .video-grid-btn-next-{{section.id}}:hover {
      transform: scale(0.9);
    }
  }
</style>

<style>
  .video-grid-btn-prev-{{section.id}},
  .video-grid-btn-next-{{section.id}} {
    display: flex;
  }
</style>

<style>
  @media(min-width: 1024px) {
    .video-grid-btn-prev-{{section.id}},
    .video-grid-btn-next-{{section.id}} {
      display: flex;
    }
  }
</style>

<style>
  .video-grid-button-{{section.id}} {
    background-color: {{ button_background }};
  }

  .video-grid-button-{{section.id}}:hover {
    transition: all 0.25s ease 0s;
    background-color: {{ button_color }};
  }
</style>

<style>
  @media(min-width: 1024px) {
    .video-grid-feature-{{section.id}} {
      flex-direction: row;
    }
  }
</style>

<style>
  .video-grid-slider-{{section.id}}.preview .swiper-wrapper {
    display: flex;
    align-items: center;
    justify-content: space-between;
    overflow: hidden;
  }

  .video-grid-slider-{{section.id}}.preview .video-grid-video-{{section.id}} {
    width: 100%;
  }

  .video-grid-slider-{{section.id}}.preview .video-grid-video-{{section.id}}:not(:first-child) {
    margin-left: 16px;
  }

  @media(min-width: 1024px) {
    .video-grid-slider-{{section.id}}.preview .video-grid-video-{{section.id}}:not(:first-child) {
      margin-left: 16px;
    }

    .video-grid-slider-{{section.id}}.preview .video-grid-video-{{section.id}} {
      width: calc(100% / 2 - (16px));
    }
  }
</style>

<div
  class="section-{{section.id}} video-grid-{{section.id}}"
  style="background-color: {{ layout_background }}; background-image: ;"
>
  <div class="section-{{section.id}}-settings">
    <div class="video-grid-body-{{section.id}}">
      <div class="video-grid-videos-{{section.id}}">
        <button
          class="video-grid-btn-prev-{{section.id}}"
        >
          <span class="animate-icon"></span>
        </button>
        <div class="video-grid-slider-wrapper-{{section.id}}">
          <div
            class="video-grid-slider-{{section.id}} swiper"

            data-gap="16" data-gap-mobile="16" data-view="2" data-view-mobile="1"
          >
            <div
              class="swiper-wrapper"
            >
              {% for block in section.blocks %}
                {% if block.type == 'slider' %}
                  <div
                    class="video-grid-video-{{section.id}} swiper-slide"
                  >
                    <div class="video-grid-video-wrap-{{section.id}}">
                      {% if block.settings.video != blank %}
                        {{
                          block.settings.video
                          | video_tag:
                            controls: false,
                            loop: true,
                            muted: true,
                            playsinline: true,
                            preload: 'none',
                            class: 'lazy'
                        }}
                      {% else %}
                        <video src="https://pixabay.com/static/videos/hero3.mp4" muted playsinline loop></video>
                      {% endif %}

                      <div class="video-grid-play-{{section.id}} active ">
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          width="10.309"
                          height="12.477"
                          viewBox="0 0 10.309 12.477"
                        >
                          <path id="Polygon_2" data-name="Polygon 2" d="M6.238,0l6.238,10.309H0Z" transform="translate(10.309) rotate(90)" fill="{{ button_color }}"></path>
                        </svg>
                      </div>
                    </div>
                  </div>
                {% endif %}
              {% endfor %}
            </div>
          </div>
        </div>
        <button
          class="video-grid-btn-next-{{section.id}}"
        >
          <span class="animate-icon"></span>
        </button>
      </div>
      <div class="video-grid-content-{{section.id}}">
        {% if heading != blank %}
          <div class="video-grid-heading-{{section.id}}">
            <p>{{ heading }}</p>
          </div>
        {% endif %}
        <div class="video-grid-features-{{section.id}}">
          {% for block in section.blocks %}
            {% if block.type == 'items' %}
              <div class="video-grid-feature-{{section.id}}">
                <div class="video-grid-circle-container-{{section.id}}">
                  <div
                    class="video-grid-circle-{{section.id}}"
                    data-percent="{{ block.settings.percentage }}"
                    data-progress="{{ range_background }}"
                    data-active-progress="{{ range_color}}"
                  >
                    <svg width="100" height="100" viewBox="0 0 36 36" style="background-color: transparent;">
                      <path d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831" fill="none" stroke="#f9f9ee" stroke-width="4" stroke-dasharray="100, 100"></path><path d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831" fill="none" stroke="#ffd75a" stroke-width="4" stroke-dasharray="94, 100" class="active-circle"></path>
                    </svg>
                    <span>{{ block.settings.percentage }}</span>
                  </div>
                </div>

                <div class="video-grid-feature-text-{{section.id}}">
                  <p>{{ block.settings.text }}</p>
                </div>
              </div>
            {% endif %}
          {% endfor %}
        </div>

        <div class="video-grid-text-{{section.id}}">
          <p>{{ subtext }}</p>
        </div>
        {% if button_label != blank %}
          <a href="{{  button_link }}" class="video-grid-button-{{section.id}}">
            <p class="video-grid-button-inner-{{section.id}}">{{ button_label }}</p>
          </a>
        {% endif %}
      </div>
    </div>
  </div>
</div>
{% schema %}
{
  "name": "PC - Social Video #1",
  "settings": [
    {
      "type": "header",
      "content": "This section is a property of PeakConversion",
      "info": "Do not sell or reproduce. contact us at franklinjounda@gmail.com for more info"
    },
    {
      "type": "header",
      "content": "Heading Settings"
    },

    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Results"
    },
    {
      "type": "range",
      "id": "heading_size",
      "label": "Heading Size",
      "default": 48,
      "min": 16,
      "max": 72
    },
    {
      "type": "select",
      "id": "heading_weight",
      "label": "Heading Weight",
      "default": "700",
      "options": [
        { "value": "400", "label": "Normal" },
        { "value": "700", "label": "Bold" }
      ]
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading Color",
      "default": "#1c413b"
    },
    {
      "type": "range",
      "id": "heading_size_mobile",
      "label": "Heading Size Mobile",
      "default": 36,
      "min": 18,
      "max": 72
    },
    {
      "type": "header",
      "content": "Percentage Settings"
    },
    {
      "type": "range",
      "id": "percentage_size",
      "label": "Percentage Size",
      "default": 16,
      "min": 12,
      "max": 20
    },
    {
      "type": "select",
      "id": "percentage_weight",
      "label": "Percentage Weight",
      "default": "700",
      "options": [
        { "value": "400", "label": "Normal" },
        { "value": "700", "label": "Bold" }
      ]
    },
    {
      "type": "color",
      "id": "percentage_color",
      "label": "Percentage Color",
      "default": "#1c413b"
    },
    {
      "type": "range",
      "id": "percentage_size_mobile",
      "label": "Percentage Size Mobile",
      "default": 14,
      "min": 10,
      "max": 18
    },
    {
      "type": "header",
      "content": "Range Settings"
    },
    {
      "type": "color",
      "id": "range_color",
      "label": "Range Color",
      "default": "#333"
    },
    {
      "type": "color",
      "id": "range_background",
      "label": "Range Background",
      "default": "#f9f9ee"
    },
    {
      "type": "header",
      "content": "Item Text Settings"
    },
    {
      "type": "range",
      "id": "item_text_size",
      "label": "Item Text Size",
      "default": 16,
      "min": 10,
      "max": 72
    },
    {
      "type": "select",
      "id": "item_text_weight",
      "label": "Item Text Weight",
      "default": "400",
      "options": [
        { "value": "400", "label": "Normal" },
        { "value": "700", "label": "Bold" }
      ]
    },
    {
      "type": "color",
      "id": "item_text_color",
      "label": "Item Text Color",
      "default": "#777381"
    },
    {
      "type": "range",
      "id": "item_text_size_mobile",
      "label": "Item Text Size Mobile",
      "default": 13,
      "min": 10,
      "max": 72
    },
    {
      "type": "header",
      "content": "Subtext Settings"
    },
    {
      "type": "text",
      "id": "subtext",
      "label": "Subtext",
      "default": "For more information refer to each product page."
    },
    {
      "type": "range",
      "id": "subtext_size",
      "label": "Subtext Size",
      "default": 12,
      "min": 10,
      "max": 72
    },
    {
      "type": "select",
      "id": "subtext_weight",
      "label": "Subtext Weight",
      "default": "400",
      "options": [
        { "value": "400", "label": "Normal" },
        { "value": "700", "label": "Bold" }
      ]
    },
    {
      "type": "color",
      "id": "subtext_color",
      "label": "Subtext Color",
      "default": "#777381"
    },
    {
      "type": "range",
      "id": "subtext_size_mobile",
      "label": "Subtext Size Mobile",
      "default": 12,
      "min": 8,
      "max": 72
    },
    {
      "type": "header",
      "content": "Button Settings"
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "Button Label",
      "default": "LEARN MORE"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button Link"
    },
    {
      "type": "range",
      "id": "button_size",
      "label": "Button Size",
      "default": 14,
      "min": 12,
      "max": 16
    },
    {
      "type": "select",
      "id": "button_weight",
      "label": "Button Weight",
      "default": "700",
      "options": [
        { "value": "400", "label": "Normal" },
        { "value": "700", "label": "Bold" }
      ]
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button Color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "button_size_mobile",
      "label": "Button Size Mobile",
      "default": 14,
      "min": 12,
      "max": 72
    },
    {
      "type": "range",
      "id": "button_radius",
      "label": "Button Radius",
      "default": 100,
      "min": 0,
      "max": 100
    },
    {
      "type": "range",
      "id": "button_border_width",
      "label": "Button Border Width",
      "default": 0,
      "min": 0,
      "max": 10
    },
    {
      "type": "select",
      "id": "button_border_style",
      "label": "Button Border Style",
      "default": "solid",
      "options": [
        { "value": "solid", "label": "Solid" },
        { "value": "dashed", "label": "Dashed" },
        { "value": "dotted", "label": "Dotted" }
      ]
    },
    {
      "type": "color",
      "id": "button_border_color",
      "label": "Button Border Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_background",
      "label": "Button Background",
      "default": "#333"
    },
    {
      "type": "header",
      "content": "Image Settings"
    },
    {
      "type": "range",
      "id": "image_radius",
      "label": "Image Radius",
      "default": 16,
      "min": 0,
      "max": 50
    },
    {
      "type": "range",
      "id": "image_border_width",
      "label": "Image Border Width",
      "default": 0,
      "min": 0,
      "max": 10
    },
    {
      "type": "select",
      "id": "image_border_style",
      "label": "Image Border Style",
      "default": "solid",
      "options": [
        { "value": "solid", "label": "Solid" },
        { "value": "dashed", "label": "Dashed" },
        { "value": "dotted", "label": "Dotted" }
      ]
    },
    {
      "type": "color",
      "id": "image_border_color",
      "label": "Image Border Color",
      "default": "#010000"
    },
    {
      "type": "header",
      "content": "Layout Settings"
    },
    {
      "type": "range",
      "id": "layout_margin_top",
      "label": "Layout Margin Top",
      "default": 0,
      "min": 0,
      "max": 100
    },
    {
      "type": "range",
      "id": "layout_margin_bottom",
      "label": "Layout Margin Bottom",
      "default": 0,
      "min": 0,
      "max": 100
    },
    {
      "type": "color",
      "id": "layout_background",
      "label": "Layout Background",
      "default": "#ffffff"
    }
  ],
  "blocks": [
    {
      "type": "slider",
      "name": "Slider",
      "settings": [
        {
          "type": "video",
          "id": "video",
          "label": "Video"
        }
      ]
    },
    {
      "type": "items",
      "name": "Items",
      "settings": [
        {
          "type": "range",
          "id": "percentage",
          "label": "Percentage",
          "default": 94,
          "min": 0,
          "max": 100
        },
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "default": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
        }
      ]
    }
  ],

  "presets": [
    {
      "name": "PC - Social Video #1",
      "blocks": [
        {
          "type": "slider",
          "settings": {
            "video": ""
          }
        },
        {
          "type": "slider",
          "settings": {
            "video": ""
          }
        },
        {
          "type": "slider",
          "settings": {
            "video": ""
          }
        },
        {
          "type": "items",
          "settings": {
            "percentage": 74,
            "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          }
        },
        {
          "type": "items",
          "settings": {
            "percentage": 94,
            "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          }
        }
      ]
    }
  ]
}
{% endschema %}
<script src="https://cdn.jsdelivr.net/npm/vanilla-lazyload@19.1.3/dist/lazyload.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/swiper@6.8.4/swiper-bundle.min.js"></script>

<script>
  function initVideoFromSocial4() {
    let lazyLoadInstance = new LazyLoad();

    window.addEventListener(
      'LazyLoad::Initialized',
      function (event) {
        window.lazyLoadInstance = event.detail.instance;
      },
      false
    );

    document.querySelector('.video-grid-slider-{{section.id}}').classList.remove('preview');

    const slider = new Swiper('.video-grid-slider-{{section.id}}', {
      speed: 300,
      loop: true,
      slideToClickedSlide: false,
      loopAdditionalSlides: 1,
      slidesPerGroup: 1,
      navigation: {
        nextEl: '.video-grid-btn-next-{{section.id}}',
        prevEl: '.video-grid-btn-prev-{{section.id}}',
      },
      breakpoints: {
        320: {
          spaceBetween: parseInt(document.querySelector('.video-grid-slider-{{section.id}}').dataset.gapMobile || 0),
          slidesPerView: parseFloat(
            document.querySelector('.video-grid-slider-{{section.id}}').dataset.viewMobile || 1
          ),
        },
        768: {
          spaceBetween: parseInt(document.querySelector('.video-grid-slider-{{section.id}}').dataset.gap || 0),
          slidesPerView: parseFloat(document.querySelector('.video-grid-slider-{{section.id}}').dataset.view || 2),
        },
        1024: {
          spaceBetween: parseInt(document.querySelector('.video-grid-slider-{{section.id}}').dataset.gap || 0),
          slidesPerView: parseFloat(document.querySelector('.video-grid-slider-{{section.id}}').dataset.view || 3),
        },
      },
    });

    const videoItems = document.querySelectorAll('.video-grid-video-{{section.id}}');

    if (videoItems) {
      videoItems.forEach((item) => {
        const video = item.querySelector('video');
        const iframe = item.querySelector('iframe');
        const videoButton = item.querySelector('.video-grid-play-{{section.id}}');
        const wrap = item.querySelector('.video-grid-video-wrap-{{section.id}}');

        if (wrap) {
          wrap.addEventListener('click', function () {
            videoItems.forEach((otherItem) => {
              const otherVideo = otherItem.querySelector('video');
              const otherIframe = otherItem.querySelector('iframe');
              const otherButton = otherItem.querySelector('.video-grid-play-{{section.id}}');

              if (otherVideo && otherVideo !== video) {
                otherVideo.pause();
                otherButton.classList.add('active');
              }

              if (otherIframe && otherIframe !== iframe) {
                otherIframe.src = otherIframe.getAttribute('data-src2');
                otherButton.classList.add('active');
              }
            });

            if (videoButton.classList.contains('active')) {
              if (video) {
                video.play();
              }
              if (iframe) iframe.src = iframe.getAttribute('data-src1');
            } else {
              if (video) video.pause();
              if (iframe) iframe.src = iframe.getAttribute('data-src2');
            }

            videoButton.classList.toggle('active');
          });
        }
      });
    }

    let circles = document.querySelectorAll('.video-grid-circle-{{section.id}}');
    const animatedCircles = new Set();

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          const circle = entry.target;

          if (animatedCircles.has(circle)) {
            return;
          }

          const progressColor = circle.getAttribute('data-progress');
          const activeProgressColor = circle.getAttribute('data-active-progress');
          const percent = parseFloat(circle.getAttribute('data-percent')) || 25;
          const lineWidth = parseFloat(circle.getAttribute('data-line')) || 4;
          const size = parseFloat(circle.getAttribute('data-size')) || 100;
          const svgNamespace = 'http://www.w3.org/2000/svg';

          let existingSvg = circle.querySelector('svg');
          if (existingSvg) {
            existingSvg.remove();
          }

          let existingSpan = circle.querySelector('span');
          if (existingSpan) {
            existingSpan.remove();
          }

          let svg = document.createElementNS(svgNamespace, 'svg');
          svg.setAttribute('width', size);
          svg.setAttribute('height', size);
          svg.setAttribute('viewBox', '0 0 36 36');
          svg.style.backgroundColor = 'transparent';

          let backgroundCircle = document.createElementNS(svgNamespace, 'path');
          backgroundCircle.setAttribute(
            'd',
            'M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831'
          );
          backgroundCircle.setAttribute('fill', 'none');
          backgroundCircle.setAttribute('stroke', `${progressColor}`);
          backgroundCircle.setAttribute('stroke-width', lineWidth);
          backgroundCircle.setAttribute('stroke-dasharray', '100, 100');

          let activeCircle = document.createElementNS(svgNamespace, 'path');
          activeCircle.setAttribute(
            'd',
            'M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831'
          );
          activeCircle.setAttribute('fill', 'none');
          activeCircle.setAttribute('stroke', `${activeProgressColor}`);
          activeCircle.setAttribute('stroke-width', lineWidth);
          activeCircle.setAttribute('stroke-dasharray', '0, 100');
          activeCircle.classList.add('active-circle');

          svg.appendChild(backgroundCircle);
          svg.appendChild(activeCircle);
          circle.appendChild(svg);

          let span = document.createElement('span');
          span.textContent = '0%';
          circle.appendChild(span);

          if (entry.isIntersecting) {
            animatedCircles.add(circle);

            let currentPercent = 0;
            function animateCircle() {
              let dashArray = `${currentPercent}, 100`;
              activeCircle.setAttribute('stroke-dasharray', dashArray);
              span.textContent = Math.round(currentPercent) + '%';

              if (currentPercent < percent) {
                currentPercent += 1;
                requestAnimationFrame(animateCircle);
              } else {
                observer.unobserve(circle);
              }
            }
            animateCircle();
          }
        });
      },
      { threshold: 0.5 }
    );

    circles.forEach((circle) => observer.observe(circle));
  }

  document.addEventListener('DOMContentLoaded', initVideoFromSocial4);

  if (Shopify.designMode) {
    document.addEventListener('shopify:section:unload', initVideoFromSocial4);
    document.addEventListener('shopify:section:load', initVideoFromSocial4);
  }
</script>